// Code generated by protoc-gen-go.
// source: post/post.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	post/post.proto

It has these top-level messages:
	ResponseType
	RequestType
	Post
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ResponseType struct {
}

func (m *ResponseType) Reset()                    { *m = ResponseType{} }
func (m *ResponseType) String() string            { return proto1.CompactTextString(m) }
func (*ResponseType) ProtoMessage()               {}
func (*ResponseType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RequestType struct {
}

func (m *RequestType) Reset()                    { *m = RequestType{} }
func (m *RequestType) String() string            { return proto1.CompactTextString(m) }
func (*RequestType) ProtoMessage()               {}
func (*RequestType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Post struct {
	Id      int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Created int32  `protobuf:"varint,2,opt,name=created" json:"created,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Article string `protobuf:"bytes,4,opt,name=article" json:"article,omitempty"`
}

func (m *Post) Reset()                    { *m = Post{} }
func (m *Post) String() string            { return proto1.CompactTextString(m) }
func (*Post) ProtoMessage()               {}
func (*Post) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto1.RegisterType((*ResponseType)(nil), "proto.ResponseType")
	proto1.RegisterType((*RequestType)(nil), "proto.RequestType")
	proto1.RegisterType((*Post)(nil), "proto.Post")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for PostService service

type PostServiceClient interface {
	ListPost(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (PostService_ListPostClient, error)
	AddPost(ctx context.Context, in *Post, opts ...grpc.CallOption) (*ResponseType, error)
}

type postServiceClient struct {
	cc *grpc.ClientConn
}

func NewPostServiceClient(cc *grpc.ClientConn) PostServiceClient {
	return &postServiceClient{cc}
}

func (c *postServiceClient) ListPost(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (PostService_ListPostClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_PostService_serviceDesc.Streams[0], c.cc, "/proto.PostService/ListPost", opts...)
	if err != nil {
		return nil, err
	}
	x := &postServiceListPostClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PostService_ListPostClient interface {
	Recv() (*Post, error)
	grpc.ClientStream
}

type postServiceListPostClient struct {
	grpc.ClientStream
}

func (x *postServiceListPostClient) Recv() (*Post, error) {
	m := new(Post)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *postServiceClient) AddPost(ctx context.Context, in *Post, opts ...grpc.CallOption) (*ResponseType, error) {
	out := new(ResponseType)
	err := grpc.Invoke(ctx, "/proto.PostService/AddPost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PostService service

type PostServiceServer interface {
	ListPost(*RequestType, PostService_ListPostServer) error
	AddPost(context.Context, *Post) (*ResponseType, error)
}

func RegisterPostServiceServer(s *grpc.Server, srv PostServiceServer) {
	s.RegisterService(&_PostService_serviceDesc, srv)
}

func _PostService_ListPost_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestType)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PostServiceServer).ListPost(m, &postServiceListPostServer{stream})
}

type PostService_ListPostServer interface {
	Send(*Post) error
	grpc.ServerStream
}

type postServiceListPostServer struct {
	grpc.ServerStream
}

func (x *postServiceListPostServer) Send(m *Post) error {
	return x.ServerStream.SendMsg(m)
}

func _PostService_AddPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Post)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostServiceServer).AddPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PostService/AddPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostServiceServer).AddPost(ctx, req.(*Post))
	}
	return interceptor(ctx, in, info, handler)
}

var _PostService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.PostService",
	HandlerType: (*PostServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPost",
			Handler:    _PostService_AddPost_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPost",
			Handler:       _PostService_ListPost_Handler,
			ServerStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("post/post.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x8f, 0xcd, 0x4e, 0x85, 0x30,
	0x10, 0x85, 0x29, 0x3f, 0xa2, 0x83, 0x62, 0x52, 0x5d, 0x34, 0xac, 0x08, 0x2b, 0x36, 0x82, 0xd1,
	0x27, 0x70, 0xef, 0xc2, 0x54, 0x1f, 0x40, 0xa4, 0xb3, 0x68, 0x82, 0xb6, 0xb6, 0xa3, 0xc9, 0x7d,
	0xfb, 0x9b, 0x96, 0xcb, 0x0d, 0x9b, 0x36, 0xdf, 0x99, 0x33, 0x39, 0x67, 0xe0, 0xd6, 0x1a, 0x4f,
	0x63, 0x78, 0x06, 0xeb, 0x0c, 0x19, 0x5e, 0xc4, 0xaf, 0xab, 0xe1, 0x5a, 0xa2, 0xb7, 0xe6, 0xc7,
	0xe3, 0xc7, 0xc1, 0x62, 0x77, 0x03, 0x95, 0xc4, 0xdf, 0x3f, 0xf4, 0x14, 0xf1, 0x13, 0xf2, 0x37,
	0xe3, 0x89, 0xd7, 0x90, 0x6a, 0x25, 0x58, 0xcb, 0xfa, 0x4c, 0xa6, 0x5a, 0x71, 0x01, 0xe5, 0xec,
	0x70, 0x22, 0x54, 0x22, 0x6d, 0x59, 0x5f, 0xc8, 0x0d, 0xf9, 0x3d, 0x14, 0xa4, 0x69, 0x41, 0x91,
	0xb5, 0xac, 0xbf, 0x92, 0x2b, 0x04, 0xff, 0xe4, 0x48, 0xcf, 0x0b, 0x8a, 0x3c, 0xea, 0x1b, 0x3e,
	0x7d, 0x43, 0x15, 0x12, 0xde, 0xd1, 0xfd, 0xeb, 0x19, 0xf9, 0x08, 0x97, 0xaf, 0xda, 0x53, 0x0c,
	0xe5, 0x6b, 0xd5, 0x61, 0x57, 0xa8, 0xa9, 0x4e, 0x5a, 0x30, 0x74, 0xc9, 0x23, 0xe3, 0x0f, 0x50,
	0xbe, 0x28, 0x15, 0xfd, 0xfb, 0x59, 0x73, 0x77, 0x5e, 0xde, 0x5d, 0x97, 0x7c, 0x5d, 0x44, 0xf5,
	0xf9, 0x18, 0x00, 0x00, 0xff, 0xff, 0xad, 0xc9, 0x0f, 0x97, 0x10, 0x01, 0x00, 0x00,
}
