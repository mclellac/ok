// Code generated by protoc-gen-go.
// source: post.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	post.proto

It has these top-level messages:
	Response
	Request
	Post
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Response struct {
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Request struct {
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Post struct {
	Id      int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Created int32  `protobuf:"varint,2,opt,name=created" json:"created,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Article string `protobuf:"bytes,4,opt,name=article" json:"article,omitempty"`
}

func (m *Post) Reset()                    { *m = Post{} }
func (m *Post) String() string            { return proto1.CompactTextString(m) }
func (*Post) ProtoMessage()               {}
func (*Post) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto1.RegisterType((*Response)(nil), "proto.Response")
	proto1.RegisterType((*Request)(nil), "proto.Request")
	proto1.RegisterType((*Post)(nil), "proto.Post")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Service service

type ServiceClient interface {
	List(ctx context.Context, in *Request, opts ...grpc.CallOption) (Service_ListClient, error)
	Add(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Response, error)
	Delete(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Response, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) List(ctx context.Context, in *Request, opts ...grpc.CallOption) (Service_ListClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Service_serviceDesc.Streams[0], c.cc, "/proto.Service/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Service_ListClient interface {
	Recv() (*Post, error)
	grpc.ClientStream
}

type serviceListClient struct {
	grpc.ClientStream
}

func (x *serviceListClient) Recv() (*Post, error) {
	m := new(Post)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *serviceClient) Add(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.Service/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Delete(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.Service/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Service service

type ServiceServer interface {
	List(*Request, Service_ListServer) error
	Add(context.Context, *Post) (*Response, error)
	Delete(context.Context, *Post) (*Response, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServiceServer).List(m, &serviceListServer{stream})
}

type Service_ListServer interface {
	Send(*Post) error
	grpc.ServerStream
}

type serviceListServer struct {
	grpc.ServerStream
}

func (x *serviceListServer) Send(m *Post) error {
	return x.ServerStream.SendMsg(m)
}

func _Service_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Post)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Service/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Add(ctx, req.(*Post))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Post)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Service/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Delete(ctx, req.(*Post))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Service_Add_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Service_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Service_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("post.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x8f, 0xcd, 0x4a, 0xc4, 0x30,
	0x10, 0xc7, 0x9b, 0x7e, 0xda, 0x11, 0x14, 0x06, 0x0f, 0xa1, 0xa7, 0x12, 0x10, 0x73, 0x2a, 0xa2,
	0x4f, 0x20, 0x78, 0xf4, 0x20, 0xf1, 0x05, 0xac, 0xcd, 0x1c, 0x02, 0xc5, 0xd4, 0x64, 0xdc, 0x17,
	0xd8, 0x17, 0x5f, 0xfa, 0xb5, 0xec, 0x6d, 0x4f, 0xc3, 0xef, 0xcf, 0x7f, 0x98, 0xdf, 0x00, 0x4c,
	0x3e, 0x72, 0x37, 0x05, 0xcf, 0x1e, 0x8b, 0x65, 0x28, 0x80, 0x1b, 0x43, 0x71, 0xf2, 0xbf, 0x91,
	0x54, 0x0d, 0x95, 0xa1, 0xbf, 0x7f, 0x8a, 0xac, 0xbe, 0x21, 0xff, 0xf4, 0x91, 0xf1, 0x0e, 0x52,
	0x67, 0xa5, 0x68, 0x85, 0xce, 0x4c, 0xea, 0x2c, 0x4a, 0xa8, 0x86, 0x40, 0x3d, 0x93, 0x95, 0x69,
	0x2b, 0x74, 0x61, 0x76, 0xc4, 0x07, 0x28, 0xd8, 0xf1, 0x48, 0x32, 0x6b, 0x85, 0xae, 0xcd, 0x0a,
	0x73, 0xbf, 0x0f, 0xec, 0x86, 0x91, 0x64, 0xbe, 0xe4, 0x3b, 0xbe, 0x1c, 0x05, 0x54, 0x5f, 0x14,
	0x0e, 0x6e, 0x20, 0x7c, 0x82, 0xfc, 0xc3, 0xcd, 0xd7, 0x56, 0xb7, 0x6e, 0xb3, 0x68, 0x6e, 0x37,
	0x9e, 0x55, 0x54, 0xf2, 0x2c, 0xf0, 0x11, 0xb2, 0x37, 0x6b, 0xf1, 0x32, 0x6f, 0xee, 0xcf, 0x4b,
	0xdb, 0x1b, 0x09, 0x6a, 0x28, 0xdf, 0x69, 0x24, 0xa6, 0x6b, 0xcd, 0x9f, 0x72, 0x49, 0x5e, 0x4f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x2b, 0xe2, 0x17, 0x6f, 0x1a, 0x01, 0x00, 0x00,
}
